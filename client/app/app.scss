$icon-font-path: "/bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap/";
$fa-font-path: "/bower_components/font-awesome/fonts";

@import 'bootstrap-sass-official/vendor/assets/stylesheets/bootstrap';
@import 'font-awesome/scss/font-awesome';

/**
 * App-wide Styles
 */

 // // Variables

 // //Fonts

 $font:          HelveticaNeue, sans-serif !default;
 $fontMedium:      HelveticaNeue-Medium, sans-serif !default;
 $fontSize:        15px !default;
 $fontSizeSmall:     0.688em !default;
 $fontSizeBig:       1.125em !default;
 $fontSizeBigger:    1.375em !default;
 $lineHeight:      20px !default;
 $lightFont:       #fff !default;
 $darkFont:        #000 !default;
 $greyFont:        #9b9b9b !default;


 $border:        1px solid #e5e4e4 !default;
 $bodyBackground:    #f1f0f0 !default;

 //Breakpoints
 $breakpoint:      630px !default;


 //Buttons
 $blueButton:      #307ebc !default;
 $blueButtonHover:   $blueButton !default;

 $greenButton:     #6eb848 !default;
 $greenButtonHover:    $greenButton !default;

 $genericButton:     #bcbcbc !default;
 $genericButtonHover:  $genericButton !default;

 $buttonFocusDarken:   10% !default;
 $buttonLineHeight:    44px !default;

 $buttonHeight:      52px !default;


 //Spacing

 $smallSpacing:      5px !default;
 $spacing:       10px !default;
 $largeSpacing:      15px !default;


 // Modals
 $modalWidth:      470px !default;
 $modalHeadingSpacing: 8px !default;
 $modalHeadingHeight:  70px !default;
 $modalBackground:   #f4f4f4 !default;

 .textLeft{
  text-align:left !important;
 }

 .textRight{
  text-align:right !important;
 }

 .textCenter{
  text-align:center !important;
 }

 .small{
  font-size:$fontSizeSmall;
 }

 .grey, .gray{
  color:#9b9b9b;
 }


 //Clear Fix
 @mixin clear() {
   &:before,
   &:after {
     content: " ";
     display: table;
   }
     &:after {
     clear: both;
   }
 }

 @mixin respond-to($media) {
   //Only if Phone
   @if $media == phone {
     @media only screen and (max-width: $breakpoint) { @content; }
   }

   //Only if Tablet
   @else if $media == tablet {
     @media only screen and (min-width: $breakpoint + 1){ @content; }
   }

   @else if $media == desktop {
     @media only screen and (min-width: "1200px"){ @content; }
   }
 }

 // Text overflow
 // Requires inline-block or block for proper styling
 @mixin textOverflow() {
   overflow: hidden;
   text-overflow: ellipsis;
   white-space: nowrap;
 }

 .button{
  @include textOverflow();
  border-radius:5px;
  display:inline-block;
  padding:0 20px;
  font-size: $fontSize;
  line-height: 52px;
  margin:0;
  text-align:center;
  vertical-align:middle;
  cursor: pointer;
  &:focus, &:active{
    outline:0;
    background-color: darken(#fff, $buttonFocusDarken)
  }
 }

 .button.hidden{
  visibility: hidden;
 }

 .generic.button{
  background: $genericButton;
  color: $lightFont;
  &:focus, &:active{
    background-color: darken($genericButton, $buttonFocusDarken)
  }
  &.disabled{
    background-color: rgba($genericButton, 0.4)
  }
 }

 .blue.button{
  background: $blueButton;
  color: $lightFont;
  &:focus, &:active{
    background-color: darken($blueButton, $buttonFocusDarken)
  }
  &.disabled{
    background-color: rgba($blueButton, 0.4)
  }
 }

 .green.button{
  background: $greenButton;
  color: $lightFont;
  &:focus, &:active{
    background-color: darken($greenButton, $buttonFocusDarken)
  }
  &.disabled{
    background-color: rgba($greenButton, 0.4)
  }
 }

 .black.button{
  background: #000;
  color: $lightFont;
  &:focus, &:active{
    background-color: lighten(#000, $buttonFocusDarken)
  }
  &.disabled{
    background-color: rgba($greenButton, 0.4)
  }
 }

 .flat.button{
  border-radius:0px;
 }

 .noBackground.button{
  background:none;
  color:#000;
 }

 .buttonBlock{
  display:block;
  width:100%;
 }

 button[disabled]{
  opacity:0.5;
 }

 .buttonSpacing{
  margin-bottom:10px !important;
 }


 .buttonSpacingSmall{
  margin-bottom:1px;
 }


 .buttonText{
  line-height:52px;
 }


 .selected.button{
  background-color: darken($blueButton, $buttonFocusDarken);
  box-shadow: 0px 0px 1px 1px rgba(0,0,0,0.5);
  box-sizing: border-box;
  -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */


  &:focus, &:active{
    background-color: darken($blueButton, $buttonFocusDarken);
  }
  &.disabled{
    background-color: rgba($blueButton, 0.4);
  }
 }

 // Forms
 //Form Columns

 .col2{
   -webkit-column-count:2;
   column-count:2;
   -webkit-column-gap:20px;
   column-gap:20px;
 }

 .col3{
   -webkit-column-count:3;
   column-count:3;
   -webkit-column-gap:10px;
   column-gap:10px;
 }


 .colBreak{
   -webkit-column-break-after: always;
   break-after: always;
 }

 .colAvoidBreak{
   page-break-inside: avoid;
   break-inside: avoid-column;
   -webkit-column-break-inside: avoid;

 }

 .noColSpacing{
   -webkit-column-gap:0;
   column-gap:0;
 }

 .required{
   &:after{
     content: " *";
     color:#b94a48;
   }
 }


 //Form Styling


 button{
   -webkit-appearance:none;
   border:0;
 }

 form label{
   font-family: $fontMedium;
   line-height:28px;
   color:#36424b;
   font-size:$fontSize;
 }

 input[type="radio"],
 input[type="checkbox"] {
   //Can we do something awesome here?
 }


 input[type="date"]{
   -webkit-appearance: textfield;
 }

 select,
 textarea,
 input[type="text"],
 input[type="password"],
 input[type="datetime"],
 input[type="datetime-local"],
 input[type="date"],
 input[type="month"],
 input[type="time"],
 input[type="week"],
 input[type="number"],
 input[type="email"],
 input[type="url"],
 input[type="search"],
 input[type="tel"],
 input[type="color"]{
   border: 1px solid #c6c5c5;
   font-size: $fontSizeBig;
   line-height:44px;
   height:46px;
   padding: 0 $spacing;
   width:100%;
   border-radius:5px;
   outline:0;
   &.hasError{
     border:1px solid red ;
   }
   &.toBeFilled{
     border: 2px solid rgb(81, 203, 238);
   }
   &:hover, &:active, &:focus{
     outline: 0;

   }
   &:active, &:focus{
     border: 1px solid rgb(81, 203, 238);
   }
 }

 textarea{
   height:auto;
 }

 .formGroup{
   @include clear();
   margin-bottom:$spacing;
   &:last-child{
     margin-bottom: 0;
   }
 }


 label[required]:after{
   content: " *";
   color: #ff0000;
 }


 .ng-invalid:not(form):not(.ng-pristine){
   border:1px solid red;
 }


 .button-text{
   line-height:52px;
 }

 .loading{
  background:rgba(255,255,255,0.5);
  position: absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  z-index: 102;
  &:before{
    content:" ";
    display:block;
    position: absolute;
    top:50%;
    left:50%;
    margin-left:-25px;
    margin-top:-25px;
    border-bottom: 7px solid #7b7b7b;
    border-left: 7px solid #7b7b7b;
    border-right: 7px solid rgba(0,0,0,0.1);
    border-top: 7px solid rgba(0,0,0,0.1);
    border-radius: 100%;
    height: 50px;
    width: 50px;
    -webkit-animation: spin 1.0s infinite linear;
    animation: spin 1.0s infinite linear;
  }
 }

 .loading.opaque{
  background:rgba(255,255,255,1);
 }

 .loadingOnBlack{
  @extend .loading;
  background:rgba(255,255,255,0.2);

  &:before{
    border-bottom: 7px solid rgba(255,255,255,0.8);
    border-left: 7px solid rgba(255,255,255,0.8);
    border-right: 7px solid rgba(0,0,0,0.1);
    border-top: 7px solid rgba(0,0,0,0.1);
  }
 }

 .loading.fixed{
  @include respond-to(phone){
    position: fixed;
  }
 }

 .loadingIcon{
  content:" ";
  display:inline-block;
  border-bottom: 2px solid #7b7b7b;
  border-left: 2px solid #7b7b7b;
  border-right: 2px solid rgba(0,0,0,0.1);
  border-top: 2px solid rgba(0,0,0,0.1);
  border-radius: 100%;
  height: 12px;
  width: 12px;
  -webkit-animation: spin 1.0s infinite linear;
  animation: spin 1.0s infinite linear;
  &.ng-hide-add{
    display: inline-block !important;
  }

  &.big{
    width:50px;
    height:50px;
    border-bottom: 7px solid rgba(255,255,255,0.8);
    border-left: 7px solid rgba(255,255,255,0.8);
    border-right: 7px solid rgba(0,0,0,0.1);
    border-top: 7px solid rgba(0,0,0,0.1);
    margin:10px 0;
  }
 }

 .badge{
  min-width: 11px;
  background: #aa0000;
  padding: 2px 3px;
  font-size: 11px;
  color: #fff;
  text-align: center;
  border-radius: 3px;
 }



 @keyframes "spin" {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }

 }


 @-webkit-keyframes "spin" {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
 }



// Component styles are injected through grunt
// injector
@import 'login/login.scss';
@import 'main/main.scss';
@import 'modal/modal.scss';
// endinjector
